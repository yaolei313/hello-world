<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>com.yao.app</groupId>
		<artifactId>parent</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.yao.app</groupId>
	<artifactId>nebula</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>nebula</name>
	<url>http://maven.apache.org</url>

	<dependencies>
		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
		  	<groupId>org.assertj</groupId>
		  	<artifactId>assertj-core</artifactId>
		</dependency>

		<!-- db and datasource -->
		<dependency>
		    <groupId>org.mariadb.jdbc</groupId>
		    <artifactId>mariadb-java-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jcl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		</dependency>
		<!-- 
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-oxm</artifactId>
		</dependency>
		 -->
		<!-- 性能不如jaxb2，未验证 -->
		<!-- 
		<dependency>
		    <groupId>com.thoughtworks.xstream</groupId>
		    <artifactId>xstream</artifactId>
		</dependency>
		-->

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
		</dependency>

		<!-- Logging Begin -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- At present time, logback is divided into three modules, logback-core, logback-classic and logback-access.
		logback-access非必须，The logback-access module integrates with Servlet containers, such as Tomcat and Jetty, 
		to provide HTTP-access log functionality. -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<!-- Logging End -->

		<!-- JSR 303 with Hibernate Validator -->
		<dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId> 
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId> 
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>

		<!-- spring mvc json -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-guava</artifactId>
		</dependency>
		<!-- 以下3个模块参照https://github.com/FasterXML/jackson-modules-java8 -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<!-- 为了spring mvc输出xml使用 -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
		</dependency>

		<!-- jaxb -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
		</dependency>

        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>

        <!-- security-->
        <dependency>
		  	<groupId>org.apache.shiro</groupId>
		  	<artifactId>shiro-core</artifactId>
		</dependency>
		<dependency>
		  	<groupId>org.apache.shiro</groupId>
		  	<artifactId>shiro-ehcache</artifactId>
		</dependency>
		<dependency>
		  	<groupId>org.apache.shiro</groupId>
		  	<artifactId>shiro-spring</artifactId>
		</dependency>
		<dependency>
		  	<groupId>org.apache.shiro</groupId>
		  	<artifactId>shiro-web</artifactId>
		</dependency>

		<!-- 临时使用 -->
		<!-- stormpath realm-->
		<dependency>
		    <groupId>com.stormpath.sdk</groupId>
		    <artifactId>stormpath-sdk-api</artifactId>
		    <version>1.0.RC4.5</version>
		</dependency>
		<dependency>
		    <groupId>com.stormpath.sdk</groupId>
		    <artifactId>stormpath-sdk-httpclient</artifactId>
		    <version>1.0.RC4.5</version>
		    <scope>runtime</scope>
		</dependency>
		<!-- This next runtime dependency is only necessary if you have
		     a REST API and you want to secure it with OAuth: -->
		<dependency>
		    <groupId>com.stormpath.sdk</groupId>
		    <artifactId>stormpath-sdk-oauth</artifactId>
		    <version>1.0.RC4.5</version>
		    <scope>runtime</scope>
		</dependency>
        <dependency>
          <groupId>com.stormpath.shiro</groupId>
          <artifactId>stormpath-shiro-core</artifactId>
          <version>0.6.0</version>
        </dependency>

		<dependency>
			<groupId>com.netflix.hystrix</groupId>
			<artifactId>hystrix-core</artifactId>
		</dependency>

		<!-- sitemesh -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
		</dependency>

		<!--
		7.x = Servlet 2.5
 		8.x = Servlet 3.0
 		9.x = Servlet 3.1
		10.x = Servlet 4.0
		-->
		<!-- embedded jetty -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-annotations</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-jmx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>apache-jsp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>apache-jstl</artifactId>
		</dependency>

	</dependencies>
	<build>
		<finalName>nebula</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.yao.app.embedded.ServerMain</mainClass>
						</manifest>
						<manifestEntries>
							<!-- Specified to allow Jetty to know its own Version ID -->
							<Implementation-Version>${jetty.version}</Implementation-Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<artifactSet>
								<excludes>
									<exclude>junit:junit</exclude>
									<exclude>org.assertj:*</exclude>
									<exclude>org.mockito:*</exclude>
									<exclude>org.mybatis.generator:*</exclude>
								</excludes>
							</artifactSet>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-jspc-maven-plugin</artifactId>
				<version>9.4.14.v20181114</version>
				<executions>
					<execution>
						<id>jspc</id>
						<goals>
							<goal>jspc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->
		</plugins>
	</build>
</project>
