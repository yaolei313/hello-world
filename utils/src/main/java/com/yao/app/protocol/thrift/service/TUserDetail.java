/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.yao.app.protocol.thrift.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.0)", date = "2021-04-12")
public class TUserDetail implements org.apache.thrift.TBase<TUserDetail, TUserDetail._Fields>, java.io.Serializable, Cloneable, Comparable<TUserDetail> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TUserDetail");

  private static final org.apache.thrift.protocol.TField ACCOUNT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNo", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SNS_ACCOUNT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("snsAccountNo", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PERMISSIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("permissions", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField OTHER_PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("otherProperties", org.apache.thrift.protocol.TType.MAP, (short)7);
  private static final org.apache.thrift.protocol.TField LOGIN_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("loginTimestamp", org.apache.thrift.protocol.TType.I64, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TUserDetailStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TUserDetailTupleSchemeFactory();

  public long accountNo; // required
  public @org.apache.thrift.annotation.Nullable String name; // required
  public @org.apache.thrift.annotation.Nullable String department; // required
  public @org.apache.thrift.annotation.Nullable String email; // required
  public @org.apache.thrift.annotation.Nullable java.nio.ByteBuffer snsAccountNo; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<String> permissions; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<String, String> otherProperties; // required
  public long loginTimestamp; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_NO((short)1, "accountNo"),
    NAME((short)2, "name"),
    DEPARTMENT((short)3, "department"),
    EMAIL((short)4, "email"),
    SNS_ACCOUNT_NO((short)5, "snsAccountNo"),
    PERMISSIONS((short)6, "permissions"),
    OTHER_PROPERTIES((short)7, "otherProperties"),
    LOGIN_TIMESTAMP((short)8, "loginTimestamp");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_NO
          return ACCOUNT_NO;
        case 2: // NAME
          return NAME;
        case 3: // DEPARTMENT
          return DEPARTMENT;
        case 4: // EMAIL
          return EMAIL;
        case 5: // SNS_ACCOUNT_NO
          return SNS_ACCOUNT_NO;
        case 6: // PERMISSIONS
          return PERMISSIONS;
        case 7: // OTHER_PROPERTIES
          return OTHER_PROPERTIES;
        case 8: // LOGIN_TIMESTAMP
          return LOGIN_TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACCOUNTNO_ISSET_ID = 0;
  private static final int __LOGINTIMESTAMP_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_NO, new org.apache.thrift.meta_data.FieldMetaData("accountNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SNS_ACCOUNT_NO, new org.apache.thrift.meta_data.FieldMetaData("snsAccountNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    tmpMap.put(_Fields.PERMISSIONS, new org.apache.thrift.meta_data.FieldMetaData("permissions", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.OTHER_PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("otherProperties", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.LOGIN_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("loginTimestamp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TUserDetail.class, metaDataMap);
  }

  public TUserDetail() {
  }

  public TUserDetail(
    long accountNo,
    String name,
    String department,
    String email,
    java.nio.ByteBuffer snsAccountNo,
    java.util.List<String> permissions,
    java.util.Map<String, String> otherProperties,
    long loginTimestamp)
  {
    this();
    this.accountNo = accountNo;
    setAccountNoIsSet(true);
    this.name = name;
    this.department = department;
    this.email = email;
    this.snsAccountNo = org.apache.thrift.TBaseHelper.copyBinary(snsAccountNo);
    this.permissions = permissions;
    this.otherProperties = otherProperties;
    this.loginTimestamp = loginTimestamp;
    setLoginTimestampIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TUserDetail(TUserDetail other) {
    __isset_bitfield = other.__isset_bitfield;
    this.accountNo = other.accountNo;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetDepartment()) {
      this.department = other.department;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetSnsAccountNo()) {
      this.snsAccountNo = org.apache.thrift.TBaseHelper.copyBinary(other.snsAccountNo);
    }
    if (other.isSetPermissions()) {
      java.util.List<String> __this__permissions = new java.util.ArrayList<String>(other.permissions);
      this.permissions = __this__permissions;
    }
    if (other.isSetOtherProperties()) {
      java.util.Map<String, String> __this__otherProperties = new java.util.HashMap<String, String>(other.otherProperties);
      this.otherProperties = __this__otherProperties;
    }
    this.loginTimestamp = other.loginTimestamp;
  }

  public TUserDetail deepCopy() {
    return new TUserDetail(this);
  }

  @Override
  public void clear() {
    setAccountNoIsSet(false);
    this.accountNo = 0;
    this.name = null;
    this.department = null;
    this.email = null;
    this.snsAccountNo = null;
    this.permissions = null;
    this.otherProperties = null;
    setLoginTimestampIsSet(false);
    this.loginTimestamp = 0;
  }

  public long getAccountNo() {
    return this.accountNo;
  }

  public TUserDetail setAccountNo(long accountNo) {
    this.accountNo = accountNo;
    setAccountNoIsSet(true);
    return this;
  }

  public void unsetAccountNo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTNO_ISSET_ID);
  }

  /** Returns true if field accountNo is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOUNTNO_ISSET_ID);
  }

  public void setAccountNoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOUNTNO_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public String getName() {
    return this.name;
  }

  public TUserDetail setName(@org.apache.thrift.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getDepartment() {
    return this.department;
  }

  public TUserDetail setDepartment(@org.apache.thrift.annotation.Nullable String department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getEmail() {
    return this.email;
  }

  public TUserDetail setEmail(@org.apache.thrift.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public byte[] getSnsAccountNo() {
    setSnsAccountNo(org.apache.thrift.TBaseHelper.rightSize(snsAccountNo));
    return snsAccountNo == null ? null : snsAccountNo.array();
  }

  public java.nio.ByteBuffer bufferForSnsAccountNo() {
    return org.apache.thrift.TBaseHelper.copyBinary(snsAccountNo);
  }

  public TUserDetail setSnsAccountNo(byte[] snsAccountNo) {
    this.snsAccountNo = snsAccountNo == null ? (java.nio.ByteBuffer)null   : java.nio.ByteBuffer.wrap(snsAccountNo.clone());
    return this;
  }

  public TUserDetail setSnsAccountNo(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer snsAccountNo) {
    this.snsAccountNo = org.apache.thrift.TBaseHelper.copyBinary(snsAccountNo);
    return this;
  }

  public void unsetSnsAccountNo() {
    this.snsAccountNo = null;
  }

  /** Returns true if field snsAccountNo is set (has been assigned a value) and false otherwise */
  public boolean isSetSnsAccountNo() {
    return this.snsAccountNo != null;
  }

  public void setSnsAccountNoIsSet(boolean value) {
    if (!value) {
      this.snsAccountNo = null;
    }
  }

  public int getPermissionsSize() {
    return (this.permissions == null) ? 0 : this.permissions.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<String> getPermissionsIterator() {
    return (this.permissions == null) ? null : this.permissions.iterator();
  }

  public void addToPermissions(String elem) {
    if (this.permissions == null) {
      this.permissions = new java.util.ArrayList<String>();
    }
    this.permissions.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<String> getPermissions() {
    return this.permissions;
  }

  public TUserDetail setPermissions(@org.apache.thrift.annotation.Nullable java.util.List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public void unsetPermissions() {
    this.permissions = null;
  }

  /** Returns true if field permissions is set (has been assigned a value) and false otherwise */
  public boolean isSetPermissions() {
    return this.permissions != null;
  }

  public void setPermissionsIsSet(boolean value) {
    if (!value) {
      this.permissions = null;
    }
  }

  public int getOtherPropertiesSize() {
    return (this.otherProperties == null) ? 0 : this.otherProperties.size();
  }

  public void putToOtherProperties(String key, String val) {
    if (this.otherProperties == null) {
      this.otherProperties = new java.util.HashMap<String, String>();
    }
    this.otherProperties.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<String, String> getOtherProperties() {
    return this.otherProperties;
  }

  public TUserDetail setOtherProperties(@org.apache.thrift.annotation.Nullable java.util.Map<String, String> otherProperties) {
    this.otherProperties = otherProperties;
    return this;
  }

  public void unsetOtherProperties() {
    this.otherProperties = null;
  }

  /** Returns true if field otherProperties is set (has been assigned a value) and false otherwise */
  public boolean isSetOtherProperties() {
    return this.otherProperties != null;
  }

  public void setOtherPropertiesIsSet(boolean value) {
    if (!value) {
      this.otherProperties = null;
    }
  }

  public long getLoginTimestamp() {
    return this.loginTimestamp;
  }

  public TUserDetail setLoginTimestamp(long loginTimestamp) {
    this.loginTimestamp = loginTimestamp;
    setLoginTimestampIsSet(true);
    return this;
  }

  public void unsetLoginTimestamp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOGINTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field loginTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginTimestamp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOGINTIMESTAMP_ISSET_ID);
  }

  public void setLoginTimestampIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOGINTIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable Object value) {
    switch (field) {
    case ACCOUNT_NO:
      if (value == null) {
        unsetAccountNo();
      } else {
        setAccountNo((Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case DEPARTMENT:
      if (value == null) {
        unsetDepartment();
      } else {
        setDepartment((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case SNS_ACCOUNT_NO:
      if (value == null) {
        unsetSnsAccountNo();
      } else {
        if (value instanceof byte[]) {
          setSnsAccountNo((byte[])value);
        } else {
          setSnsAccountNo((java.nio.ByteBuffer)value);
        }
      }
      break;

    case PERMISSIONS:
      if (value == null) {
        unsetPermissions();
      } else {
        setPermissions((java.util.List<String>)value);
      }
      break;

    case OTHER_PROPERTIES:
      if (value == null) {
        unsetOtherProperties();
      } else {
        setOtherProperties((java.util.Map<String, String>)value);
      }
      break;

    case LOGIN_TIMESTAMP:
      if (value == null) {
        unsetLoginTimestamp();
      } else {
        setLoginTimestamp((Long)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_NO:
      return getAccountNo();

    case NAME:
      return getName();

    case DEPARTMENT:
      return getDepartment();

    case EMAIL:
      return getEmail();

    case SNS_ACCOUNT_NO:
      return getSnsAccountNo();

    case PERMISSIONS:
      return getPermissions();

    case OTHER_PROPERTIES:
      return getOtherProperties();

    case LOGIN_TIMESTAMP:
      return getLoginTimestamp();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_NO:
      return isSetAccountNo();
    case NAME:
      return isSetName();
    case DEPARTMENT:
      return isSetDepartment();
    case EMAIL:
      return isSetEmail();
    case SNS_ACCOUNT_NO:
      return isSetSnsAccountNo();
    case PERMISSIONS:
      return isSetPermissions();
    case OTHER_PROPERTIES:
      return isSetOtherProperties();
    case LOGIN_TIMESTAMP:
      return isSetLoginTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that instanceof TUserDetail)
      return this.equals((TUserDetail)that);
    return false;
  }

  public boolean equals(TUserDetail that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_accountNo = true;
    boolean that_present_accountNo = true;
    if (this_present_accountNo || that_present_accountNo) {
      if (!(this_present_accountNo && that_present_accountNo))
        return false;
      if (this.accountNo != that.accountNo)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_snsAccountNo = true && this.isSetSnsAccountNo();
    boolean that_present_snsAccountNo = true && that.isSetSnsAccountNo();
    if (this_present_snsAccountNo || that_present_snsAccountNo) {
      if (!(this_present_snsAccountNo && that_present_snsAccountNo))
        return false;
      if (!this.snsAccountNo.equals(that.snsAccountNo))
        return false;
    }

    boolean this_present_permissions = true && this.isSetPermissions();
    boolean that_present_permissions = true && that.isSetPermissions();
    if (this_present_permissions || that_present_permissions) {
      if (!(this_present_permissions && that_present_permissions))
        return false;
      if (!this.permissions.equals(that.permissions))
        return false;
    }

    boolean this_present_otherProperties = true && this.isSetOtherProperties();
    boolean that_present_otherProperties = true && that.isSetOtherProperties();
    if (this_present_otherProperties || that_present_otherProperties) {
      if (!(this_present_otherProperties && that_present_otherProperties))
        return false;
      if (!this.otherProperties.equals(that.otherProperties))
        return false;
    }

    boolean this_present_loginTimestamp = true;
    boolean that_present_loginTimestamp = true;
    if (this_present_loginTimestamp || that_present_loginTimestamp) {
      if (!(this_present_loginTimestamp && that_present_loginTimestamp))
        return false;
      if (this.loginTimestamp != that.loginTimestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(accountNo);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
    if (isSetDepartment())
      hashCode = hashCode * 8191 + department.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetSnsAccountNo()) ? 131071 : 524287);
    if (isSetSnsAccountNo())
      hashCode = hashCode * 8191 + snsAccountNo.hashCode();

    hashCode = hashCode * 8191 + ((isSetPermissions()) ? 131071 : 524287);
    if (isSetPermissions())
      hashCode = hashCode * 8191 + permissions.hashCode();

    hashCode = hashCode * 8191 + ((isSetOtherProperties()) ? 131071 : 524287);
    if (isSetOtherProperties())
      hashCode = hashCode * 8191 + otherProperties.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(loginTimestamp);

    return hashCode;
  }

  @Override
  public int compareTo(TUserDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.compare(isSetAccountNo(), other.isSetAccountNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNo, other.accountNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.compare(isSetName(), other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.compare(isSetDepartment(), other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.compare(isSetEmail(), other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.compare(isSetSnsAccountNo(), other.isSetSnsAccountNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSnsAccountNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.snsAccountNo, other.snsAccountNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.compare(isSetPermissions(), other.isSetPermissions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPermissions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.permissions, other.permissions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.compare(isSetOtherProperties(), other.isSetOtherProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOtherProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.otherProperties, other.otherProperties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.compare(isSetLoginTimestamp(), other.isSetLoginTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginTimestamp, other.loginTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TUserDetail(");
    boolean first = true;

    sb.append("accountNo:");
    sb.append(this.accountNo);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("department:");
    if (this.department == null) {
      sb.append("null");
    } else {
      sb.append(this.department);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("snsAccountNo:");
    if (this.snsAccountNo == null) {
      sb.append("null");
    } else {
      org.apache.thrift.TBaseHelper.toString(this.snsAccountNo, sb);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("permissions:");
    if (this.permissions == null) {
      sb.append("null");
    } else {
      sb.append(this.permissions);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("otherProperties:");
    if (this.otherProperties == null) {
      sb.append("null");
    } else {
      sb.append(this.otherProperties);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginTimestamp:");
    sb.append(this.loginTimestamp);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TUserDetailStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUserDetailStandardScheme getScheme() {
      return new TUserDetailStandardScheme();
    }
  }

  private static class TUserDetailStandardScheme extends org.apache.thrift.scheme.StandardScheme<TUserDetail> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TUserDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.accountNo = iprot.readI64();
              struct.setAccountNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department = iprot.readString();
              struct.setDepartmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SNS_ACCOUNT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.snsAccountNo = iprot.readBinary();
              struct.setSnsAccountNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PERMISSIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.permissions = new java.util.ArrayList<String>(_list0.size);
                @org.apache.thrift.annotation.Nullable String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.permissions.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setPermissionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OTHER_PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map3 = iprot.readMapBegin();
                struct.otherProperties = new java.util.HashMap<String, String>(2*_map3.size);
                @org.apache.thrift.annotation.Nullable String _key4;
                @org.apache.thrift.annotation.Nullable String _val5;
                for (int _i6 = 0; _i6 < _map3.size; ++_i6)
                {
                  _key4 = iprot.readString();
                  _val5 = iprot.readString();
                  struct.otherProperties.put(_key4, _val5);
                }
                iprot.readMapEnd();
              }
              struct.setOtherPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // LOGIN_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.loginTimestamp = iprot.readI64();
              struct.setLoginTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TUserDetail struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ACCOUNT_NO_FIELD_DESC);
      oprot.writeI64(struct.accountNo);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.department != null) {
        oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
        oprot.writeString(struct.department);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.snsAccountNo != null) {
        oprot.writeFieldBegin(SNS_ACCOUNT_NO_FIELD_DESC);
        oprot.writeBinary(struct.snsAccountNo);
        oprot.writeFieldEnd();
      }
      if (struct.permissions != null) {
        oprot.writeFieldBegin(PERMISSIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.permissions.size()));
          for (String _iter7 : struct.permissions)
          {
            oprot.writeString(_iter7);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.otherProperties != null) {
        oprot.writeFieldBegin(OTHER_PROPERTIES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.otherProperties.size()));
          for (java.util.Map.Entry<String, String> _iter8 : struct.otherProperties.entrySet())
          {
            oprot.writeString(_iter8.getKey());
            oprot.writeString(_iter8.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LOGIN_TIMESTAMP_FIELD_DESC);
      oprot.writeI64(struct.loginTimestamp);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TUserDetailTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUserDetailTupleScheme getScheme() {
      return new TUserDetailTupleScheme();
    }
  }

  private static class TUserDetailTupleScheme extends org.apache.thrift.scheme.TupleScheme<TUserDetail> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TUserDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAccountNo()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDepartment()) {
        optionals.set(2);
      }
      if (struct.isSetEmail()) {
        optionals.set(3);
      }
      if (struct.isSetSnsAccountNo()) {
        optionals.set(4);
      }
      if (struct.isSetPermissions()) {
        optionals.set(5);
      }
      if (struct.isSetOtherProperties()) {
        optionals.set(6);
      }
      if (struct.isSetLoginTimestamp()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetAccountNo()) {
        oprot.writeI64(struct.accountNo);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetDepartment()) {
        oprot.writeString(struct.department);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetSnsAccountNo()) {
        oprot.writeBinary(struct.snsAccountNo);
      }
      if (struct.isSetPermissions()) {
        {
          oprot.writeI32(struct.permissions.size());
          for (String _iter9 : struct.permissions)
          {
            oprot.writeString(_iter9);
          }
        }
      }
      if (struct.isSetOtherProperties()) {
        {
          oprot.writeI32(struct.otherProperties.size());
          for (java.util.Map.Entry<String, String> _iter10 : struct.otherProperties.entrySet())
          {
            oprot.writeString(_iter10.getKey());
            oprot.writeString(_iter10.getValue());
          }
        }
      }
      if (struct.isSetLoginTimestamp()) {
        oprot.writeI64(struct.loginTimestamp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TUserDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.accountNo = iprot.readI64();
        struct.setAccountNoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.department = iprot.readString();
        struct.setDepartmentIsSet(true);
      }
      if (incoming.get(3)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(4)) {
        struct.snsAccountNo = iprot.readBinary();
        struct.setSnsAccountNoIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list11 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
          struct.permissions = new java.util.ArrayList<String>(_list11.size);
          @org.apache.thrift.annotation.Nullable String _elem12;
          for (int _i13 = 0; _i13 < _list11.size; ++_i13)
          {
            _elem12 = iprot.readString();
            struct.permissions.add(_elem12);
          }
        }
        struct.setPermissionsIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TMap _map14 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING); 
          struct.otherProperties = new java.util.HashMap<String, String>(2*_map14.size);
          @org.apache.thrift.annotation.Nullable String _key15;
          @org.apache.thrift.annotation.Nullable String _val16;
          for (int _i17 = 0; _i17 < _map14.size; ++_i17)
          {
            _key15 = iprot.readString();
            _val16 = iprot.readString();
            struct.otherProperties.put(_key15, _val16);
          }
        }
        struct.setOtherPropertiesIsSet(true);
      }
      if (incoming.get(7)) {
        struct.loginTimestamp = iprot.readI64();
        struct.setLoginTimestampIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

